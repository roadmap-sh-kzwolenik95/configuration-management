# installs and configures nginx
- name: Install nginx
  ansible.builtin.dnf:
    name: nginx
    state: present

- name: Install snap
  ansible.builtin.dnf:
    name: snapd
    state: present

- name: Link snap
  ansible.builtin.file:
    src: /var/lib/snapd/snap
    dest: /snap
    owner: root
    group: root
    state: link

- name: Install certbot
  community.general.snap:
    name: certbot
    classic: true

- name: Copy Nginx site config to sites-enabled
  ansible.builtin.template:
    src: templates/site-config.j2
    dest: "/etc/nginx/conf.d/{{ full_domain }}.conf"
    force: false
    owner: root
    group: root
    mode: "0644"
  notify:
    - Reload nginx config

- name: Create directory for the site files
  ansible.builtin.file:
    path: /var/www/{{ full_domain }}/html/
    state: directory
    owner: root
    group: root
    mode: "0755"
  notify:
    - Reload nginx config

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Configure ssl with certbot
  ansible.builtin.command:
    argv:
      - "certbot"
      - "--non-interactive"
      - "--nginx"
      # - "--test-cert" # test cert to avoid rate limits
      - "--email"
      - "{{ acme_email }}"
      - "--agree-tos"
      - "--domains"
      - "{{ full_domain }}"
  register: cmd_output
  changed_when: cmd_output.rc != 0
